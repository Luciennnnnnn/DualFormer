# general settings
name: train_bebygan_x4_hgd_dual_former
model_type: BebyGANHardGatedDegradationSpecModel
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0
# ----------------- options for synthesizing training data in BebyGANHardGatedDegradationSpecModel ----------------- #

# hard degradation process
gaussian_noise_prob: 0.5
noise_range: [1, 30]
poisson_scale_range: [0.05, 3]
gray_noise_prob: 0.4
jpeg_range: [40, 95]

gt_size: 128
queue_size: 240

# dataset and data loader settings
datasets:
  train:
    name: DF2K+OST
    type: GatedDegradationDataset
    dataroot_gt: datasets/DF2K+OST
    meta_info: datasets/meta_info_DF2K_multiscale_OST_sub.txt
    io_backend:
      type: disk

    blur_kernel_size: 21
    kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0
    blur_sigma: [0.1, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    gt_size: 128
    use_hflip: True
    use_rot: False

    # data loader
    num_worker_per_gpu: 8
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  # val:
  #   name: BSDS100
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/B100/HD/HR/X4
  #   dataroot_lq: datasets/B100/HD/LR/X4
  #   first_k: 8
  #   io_backend:
  #     type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23

network_d:
  type: SwinTransformer
  img_size: 128
  patch_size: 32
  num_classes: 1
  embed_dim: 96
  depths: [8, 2]
  num_heads: [3, 6]
  mlp_ratio: 4
  window_size: 4
  fused_window_process: True
  in_chans: 3

net_spectral_d:
  type: SpectralDiscriminator2D
  version: swin
  img_size: 128
  patch_size: 32
  num_classes: 1
  embed_dim: 96
  depths: [8, 2]
  num_heads: [3, 6]
  mlp_ratio: 4
  window_size: 4
  fused_window_process: True
  reduction: none
  spec_type: power
  fix_normalize: True

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: experiments/pretrained_models/net_g_esrnet_x4_hgd.pth
  strict_load_g: false
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_grad_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_spectral_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  scheduler:
    type: MultiStepLR
    milestones: [50000, 100000, 200000, 300000]
    gamma: 0.5

  total_iter: 400000
  warmup_iter: -1  # no warm up

  pixel_opt:
    type: BBL
    alpha: 1
    beta: 1
    ksize: 3
    pad: 0
    stride: 3
    criterion: 'l1'
    loss_weight: !!float 1.0
  bp_opt:
    type: L1Loss
    loss_weight: !!float 7e-1
    reduction: mean
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv3_4': 0.125
      'conv4_4': 0.25
      'conv5_4': 0.5  # before relu
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 1.0
    style_weight: 0
    criterion: l1
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 5e-3
    spectral_d_weight: !!float 1e-1
    flat_ksize: 11
    flat_std: 0.025

  net_d_iters: 1
  net_d_init_iters: 0

  branch_pretrain: 1
  branch_init_iters: 5000

# Uncomment these for validation
# validation settings
val:
  val_freq: !!float 5e3
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    lpips:
      type: calculate_lpips
      better: lower

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
