# general settings
name: train_esrgan_x4_sgd_dual_former
model_type: ESRGANSimpleGatedDegradationWSpecModel
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 2 GPUs
manual_seed: 0

auto_clean: false
# ----------------- options for synthesizing training data in ESRGANSimpleGatedDegradationWSpecModel ----------------- #

# simple degradation process
noise_range: [1, 30]
gray_noise_prob: 0.4
jpeg_range: [40, 95]

gt_size: 192
queue_size: 120

# dataset and data loader settings
datasets:
  train:
    name: DF2K+OST
    type: GatedDegradationDataset
    dataroot_gt: datasets/DF2K+OST
    meta_info: datasets/meta_info_DF2K_multiscale_OST_sub.txt
    io_backend:
      type: disk

    blur_kernel_size: 21
    kernel_list: ['iso']
    kernel_prob: [1]

    # below not used
    sinc_prob: 0
    blur_sigma: [0.1, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    gt_size: 192
    use_hflip: True
    use_rot: False

    # data loader
    num_worker_per_gpu: 5
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32

network_d:
  type: SwinTransformer
  img_size: 192
  patch_size: 8
  num_classes: 1
  embed_dim: 64
  depths: [8, 2]
  num_heads: [2, 4]
  mlp_ratio: 2
  window_size: 24
  fused_window_process: True
  in_chans: 3

net_spectral_d:
  type: SpectralDiscriminator2D
  version: swin
  img_size: 192
  patch_size: 64
  num_classes: 1
  embed_dim: 64
  depths: [6]
  num_heads: [2]
  mlp_ratio: 2
  window_size: 3
  fused_window_process: True
  reduction: mean

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: experiments/pretrained_models/net_g_esrnet_x4_sgd.pth
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_spectral_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  scheduler:
    type: MultiStepLR
    milestones: [400000]
    gamma: 0.5

  total_iter: 50000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: !!float 1e-2
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: wgan
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 5e-3

  net_d_iters: 5
  net_d_init_iters: 0

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
